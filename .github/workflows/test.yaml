name: Build and test L2s

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 5'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Load ccache
      uses: actions/cache@v3
      with:
        path: |
          ~/.buildroot-ccache
        key: ${{ runner.os }}-${{ runner.arch }}-ccache

    - name: Install Ubuntu packages
      run: |
        sudo apt update
        sudo apt install -qq libelf-dev binutils-powerpc64le-linux-gnu gcc-powerpc64le-linux-gnu bison flex tar make gzip cmake python3 python3-pexpect device-tree-compiler libpixman-1-0 libgio-qt0

    - name: Configure
      run: |
        make kvm_l1_defconfig
        ./buildroot/utils/config --file output/.config -e BR2_TOOLCHAIN_EXTERNAL
        make olddefconfig
    - name: Build
      run: make -j $(nproc)
    - name: Pack artifacts
      run: |
         scripts/copy_qemu.sh
         scripts/copy_images.sh
         tar -cvf artifacts.tar overlay/qemu-system-ppc64 overlay/rootfs.cpio overlay/slof.bin overlay/vmlinux output/build/host-qemu-custom/build/qemu-system-ppc64
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ runner.os }}-${{ runner.arch }}-${{ github.run_id }}
        path: artifacts.tar
        retention-days: 2 # short since it's only to be reused below
  test:
    needs: build
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        cpu: [
          "p9",
          "p10",
        ]
        api: [
          "v1",
          "v2",
        ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install Ubuntu packages
      run: |
        sudo apt update
        sudo apt install -qq libelf-dev binutils-powerpc64le-linux-gnu gcc-powerpc64le-linux-gnu bison flex tar make gzip cmake python3 python3-pexpect device-tree-compiler libpixman-1-0 libgio-qt0
    - uses: actions/download-artifact@v3
      with:
        name: build-${{ runner.os }}-${{ runner.arch }}-${{ github.run_id }}
    - name: Unpack artifacts
      run: tar xvf artifacts.tar
    - name: Test ${{ matrix.api }} + ${{ matrix.cpu }} API
      run: ./test_L1.sh --${{ matrix.api }} --${{ matrix.cpu }}


